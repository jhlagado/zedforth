dup:
    exx
    push HL
    exx
    _next

double:
    rst 08
    db dup,plus,exit
    
plus:
    exx
    pop DE
    ex DE,HL
    add HL,DE
    exx
    _next

exit:
    _exit
    
dot:
    _next
    
quit:
    halt

lit:            ; 85t
	ld H,0
    ld A,(BC)
    ld L,A
	inc BC
	ld A,(BC)
    ld H,A
	inc BC
    push HL
    exx
    pop DE
    push HL
    ex DE,HL
    exx
    _next         ; return to adr2 + 2
