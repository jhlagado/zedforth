; word ( delim "<chars>ccc<char>" -- c-addr ) 
; read a word from input stream
; Skip leading delimiters. Parse characters ccc delimited by char. 
word:
    _enter
    _unjoin
    
    _dup                                    ; delim delim
    _call skipDelims                        ; delim
    _fetch var_here                         ; delim ptr
    _onePlus                                ; delim ptr'        ; fill in length later
    _push $40                               ; delim ptr' maxlen
    _call wordRead                          ; ptr len
    _swap                                   ; len ptr'
    _oneMinus                               ; len ptr
    _tuck                                   ; ptr len ptr   
    _cbang                                  ; ptr               ; store length

    _rejoin
    _exit                                     

; delim -- delim
skipDelims:                                 
    exx
    ld C,L                                  ; delim             ; C: delim
    _drop
    _fetch var_tibUsed                      ; used
    ld DE,HL                                ; used              ; DE: used C: delim
    _fetch var_tibPtr                       ; used ptr
    _dup                                    ; used ptr ptr
    jr skipd4
skipd1:
    ex DE,HL                                ; used ptr ptr'     ; DE: counter       
    ld A,(HL)                               ; used ptr ptr'    
    cp C                                                        ; compare with delim
    jr z,skipd3                             ;                   ; if delim then skip
    cp $1F                                  ;                   ; compare whitespace
    jr c,skipd3                                                 ; if white space then skip
    cp $5C                                  ;                   ; \ start of a comment?
    jr nz,skipd5                                                ; if \ then skip to EOL
skipd2:
    inc HL                                  ; used ptr ptr'
    ld A,(HL)                               ;      
    cp "\n"
    jr nz,skipd2                                                ; skip comment loop
    bit 7,A                                 ;                   ; EOF? used by tests
    jr nz,skipd5
skipd3:
    inc HL                                  ; used ptr ptr'
skipd4:
    ex DE,HL                                ; used ptr counter  ; DE: ptr'                                
    _loopNext skipd1                        ; DE unharmed
    ex DE,HL                                ; used ptr ptr'     ; DE: counter       
skipd5:
    _dup                                    ; used ptr ptr' ptr' 
    _store var_tibPtr                       ; used ptr ptr'     ; update tibPtr
    _swap                                   ; used ptr' ptr
    _minus                                  ; used diff
    _minus                                  ; used'
    _store var_tibUsed                                          ; update tibUsed
    _drop
    _next                                     

; ( delim ptr maxlen -- ptr len )
wordRead:
    exx
    ld B,L                                  ; delim dest maxlen     ; B: low byte of maxlen
    _drop                                   ; delim dest         
    _swap                                   ; dest delim
    ld C,L                                  ;                       ; C: delim
    _drop                                   ; dest
    _dup                                    ; dest dest
    ex DE,HL                                ; 
    ld HL,(tibPtr)                          ; dest src              ; HL: src DE: dest B: maxlen C: delim
    _dup                                    ; dest src src    
    jr wordRead2
wordRead1:
    ld A,(HL)                               ; dest src src
    cp C                                                            ; delim? 
    jr z,wordRead3
    cp " "                                                          ; < space? i.e. control chars
    jr c,wordRead3
    bit 7,A                                                         ; EOF? used by tests
    jr nz,wordRead3
    ld (DE),A                                                       ; write to dest                            
    _onePlus                                ; dest src src'
    inc DE                                                          ; DE: dest'
wordRead2:
    djnz wordRead1
wordRead3:
    _dup                                    ; dest src src' src'
    _store var_tibPtr                       ; dest src src'
    _swap                                   ; dest src' src
    _minus                                  ; dest len
    _fetch var_tibUsed                      ; dest len used
    _over                                   ; dest len used len
    _minus                                  ; dest len used'
    _store var_tibUsed                      ; dest len
    exx
    _next

