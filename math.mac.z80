.macro _plus            ; 21t             
    pop DE		            ; 10t
    add HL,DE               ; 11t
.endm

.macro _minus                         
    pop DE
    ex DE,HL
    or A    
    sbc HL,DE
.endm

.macro _onePlus
    inc HL              ; 6t
.endm

.macro _oneMinus
    dec HL
.endm

.macro _twoPlus
    _onePlus
    _onePlus
.endm

.macro _twoMinus
    _oneMinus
    _oneMinus
.endm

.macro _cellPlus
    _twoPlus    
.endm

.macro _cellMinus
    _twoMinus    
.endm

.macro _twoSlash                            ; n -- n/2
    srl H
    rr L
.endm

; 0= ( n -- t )
; Returns true if n is zero
.macro _zeroEQ      
    ld A, L         ; 4t
    or H            ; 4t
    jr z,zeroEQ1%%M
    ld HL,1
zeroEQ1%%M:
    dec HL      
.endm

; 0< ( n -- t )
; Returns true if n is negative
.macro _zeroLT      
	SLA H	; sign bit -> cy flag
	SBC	A,A	; propagate cy through A
	LD	H,A	; put 0000 or FFFF in TOS
	LD	L,A
.endm

; = ( x1 x2 -- flag )  
; Returns true if x1 = x2
.macro _eq
    _xorr
    _zeroEQ
.endm

; set zero flag if TOS is zero
; consumes TOS
.macro _isZero      ; 18t
    ld A, L         ; 4t
    or H            ; 4t
    _drop           ; 10t
.endm

