; reads next cell into HL
; advances IP by 2
.macro _litParam:           ; 34t
    ex DE,HL
    ld E,(HL)
	inc HL
	ld D,(HL)
	inc HL
    ex DE,HL
.endm

; transfers HL to TOS (HL')
.macro _exPush              ; 38t
    push HL             
    exx
    _swap
    exx
.endm

; transfers TOS (HL') to HL
.macro _exPop               ; 38t
    exx
    _swap
    exx
    pop HL             
.endm

.macro _lit:                ; 72t
    _litParam
    _exPush
.endm

.macro _unnip			    ; 12t		; x y -- z x y   N: z --
	dec SP	
    dec SP	
.endm

.macro _twoUnnip			; 24t		; x y -- z x y   N: z --
	_unnip	
    _unnip	
.endm

.macro _dup
    push HL			        ; 11t
.endm

.macro _drop                ; 10t			x1 --  
    pop HL			            
.endm

.macro _swap                ; 19t			x1 x2 -- x2 x1
    ex (SP),HL		
.endm

.macro _over 	            ; 36t			x1 x2 -- x1 x2 x1
    pop DE			            ; 10t		x2			T: x1
    push DE			            ; 11t		x1 x2		T: x1
	_dup			            ; 11t
	ex DE,HL			        ; 4t
.endm

.macro _rot	                ; 45t			( x1 x2 x3 -- x2 x3 x1 )
    pop DE		                ; 10t
    ex DE,HL			        ; 4t		x1 x3 			T: x2
    ex (SP),HL			        ; 20t		x2 x3 			T: x1
	_dup			            ; 11t
.endm

.macro _nip 	            ; 14t			x1 x2 -- x2  		
	inc SP	
    inc SP	
.endm

.macro _tuck				        ; x1 x2 -- x2 x1 x2
	_swap				; 25t
    _over				; 35t
.endm

.macro _twoDup      ; 43t         	; x1 x2 -- x1 x2 x1 x2
    pop DE			    ; 10t		; x2				T: x1
    push DE			    ; 11t		; x1 x2				T: x1
	_dup				; 11t		; x1 x2 x2			T: x1
	push DE			    ; 11t		; x1 x2 x1 x2
.endm

.macro _twoDrop     ; 20t       	; x x --     
    _drop				; 10t
	_drop				; 10t
.endm

.macro _push, src                           ; put src (value or memory) location on top of param stack
    _dup
    ld HL, src
.endm

.macro _pushc, src                           ; put src (value or memory) location on top of param stack
    _dup
    ld L, src
    ld H,0
.endm

.macro _rpush			    ; 38t		
    dec BC
    ld A,E
    ld (BC),A
    dec BC
    ld A,D
    ld (BC),A
.endm

.macro _rpop				; 38t		
    ld A,(BC)
    ld D,A
    inc BC
    ld A,(BC)
    ld E,A
    inc BC
.endm
